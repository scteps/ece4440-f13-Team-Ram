	component MTL_SOPC is
		port (
			data_to_and_from_the_cfi_flash            : inout std_logic_vector(7 downto 0)  := (others => 'X'); -- data_to_and_from_the_cfi_flash
			address_to_the_cfi_flash                  : out   std_logic_vector(21 downto 0);                    -- address_to_the_cfi_flash
			write_n_to_the_cfi_flash                  : out   std_logic_vector(0 downto 0);                     -- write_n_to_the_cfi_flash
			select_n_to_the_cfi_flash                 : out   std_logic_vector(0 downto 0);                     -- select_n_to_the_cfi_flash
			read_n_to_the_cfi_flash                   : out   std_logic_vector(0 downto 0);                     -- read_n_to_the_cfi_flash
			reset_n                                   : in    std_logic                     := 'X';             -- reset_n
			clk_50                                    : in    std_logic                     := 'X';             -- clk
			altpll_sys_c0_out                         : out   std_logic;                                        -- clk
			altpll_sys_c1_out                         : out   std_logic;                                        -- clk
			altpll_sys_c2_out                         : out   std_logic;                                        -- clk
			locked_from_the_altpll_sys                : out   std_logic;                                        -- export
			phasedone_from_the_altpll_sys             : out   std_logic;                                        -- export
			SRAM_DQ_to_and_from_the_sram              : inout std_logic_vector(15 downto 0) := (others => 'X'); -- DQ
			SRAM_ADDR_from_the_sram                   : out   std_logic_vector(17 downto 0);                    -- ADDR
			SRAM_UB_n_from_the_sram                   : out   std_logic;                                        -- UB_n
			SRAM_LB_n_from_the_sram                   : out   std_logic;                                        -- LB_n
			SRAM_WE_n_from_the_sram                   : out   std_logic;                                        -- WE_n
			SRAM_CE_n_from_the_sram                   : out   std_logic;                                        -- CE_n
			SRAM_OE_n_from_the_sram                   : out   std_logic;                                        -- OE_n
			zs_addr_from_the_sdram                    : out   std_logic_vector(11 downto 0);                    -- addr
			zs_ba_from_the_sdram                      : out   std_logic_vector(1 downto 0);                     -- ba
			zs_cas_n_from_the_sdram                   : out   std_logic;                                        -- cas_n
			zs_cke_from_the_sdram                     : out   std_logic;                                        -- cke
			zs_cs_n_from_the_sdram                    : out   std_logic;                                        -- cs_n
			zs_dq_to_and_from_the_sdram               : inout std_logic_vector(15 downto 0) := (others => 'X'); -- dq
			zs_dqm_from_the_sdram                     : out   std_logic_vector(1 downto 0);                     -- dqm
			zs_ras_n_from_the_sdram                   : out   std_logic;                                        -- ras_n
			zs_we_n_from_the_sdram                    : out   std_logic;                                        -- we_n
			vid_clk_to_the_alt_vip_itc_0              : in    std_logic                     := 'X';             -- vid_clk
			vid_data_from_the_alt_vip_itc_0           : out   std_logic_vector(23 downto 0);                    -- vid_data
			underflow_from_the_alt_vip_itc_0          : out   std_logic;                                        -- underflow
			vid_datavalid_from_the_alt_vip_itc_0      : out   std_logic;                                        -- vid_datavalid
			vid_v_sync_from_the_alt_vip_itc_0         : out   std_logic;                                        -- vid_v_sync
			vid_h_sync_from_the_alt_vip_itc_0         : out   std_logic;                                        -- vid_h_sync
			vid_f_from_the_alt_vip_itc_0              : out   std_logic;                                        -- vid_f
			vid_h_from_the_alt_vip_itc_0              : out   std_logic;                                        -- vid_h
			vid_v_from_the_alt_vip_itc_0              : out   std_logic;                                        -- vid_v
			in_port_to_the_key                        : in    std_logic_vector(7 downto 0)  := (others => 'X'); -- export
			out_port_from_the_led                     : out   std_logic_vector(17 downto 0);                    -- export
			TOUCH_I2C_SDA_to_and_from_the_multi_touch : inout std_logic                     := 'X';             -- I2C_SDA
			TOUCH_I2C_SCL_from_the_multi_touch        : out   std_logic;                                        -- I2C_SCL
			TOUCH_INT_n_to_the_multi_touch            : in    std_logic                     := 'X';             -- INT_n
			in_port_to_the_sw                         : in    std_logic_vector(17 downto 0) := (others => 'X'); -- export
			LCD_RS_from_the_lcd                       : out   std_logic;                                        -- RS
			LCD_RW_from_the_lcd                       : out   std_logic;                                        -- RW
			LCD_data_to_and_from_the_lcd              : inout std_logic_vector(7 downto 0)  := (others => 'X'); -- data
			LCD_E_from_the_lcd                        : out   std_logic;                                        -- E
			pio_0_external_connection_export          : out   std_logic;                                        -- export
			pio_1_external_connection_export          : in    std_logic                     := 'X';             -- export
			pio_2_external_connection_export          : out   std_logic;                                        -- export
			miso_2_external_connection_export         : in    std_logic                     := 'X';             -- export
			cse_2_external_connection_export          : out   std_logic;                                        -- export
			miso_3_external_connection_export         : in    std_logic                     := 'X';             -- export
			cse_3_external_connection_export          : out   std_logic                                         -- export
		);
	end component MTL_SOPC;

